{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"vmSize": {
			"type": "string",
			"defaultValue": "Standard_B1ms",
			"allowedValues": [
				"Standard_B1ms",
				"Standard_A1",
				"Standard_A2",
				"Standard_A3",
				"Standard_A4",
				"Standard_D1",
				"Standard_D2s_v3",
				"Standard_D3",
				"Standard_D4"
			],
			"metadata": {
				"description": "Size of vm"
			}
		},
		"username": {
			"type": "string",
			"defaultValue": "azuredevops",
			"metadata": {
				"description": "Username for the Virtual Machine."
			}
		},
		"dnsNameForPublicIP": {
			"defaultValue": "tomcatserver",
			"type": "string",
			"metadata": {
				"description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
			}
		},
		"_artifactsLocation1": {
			"defaultValue": "https://storageaccountscripts.blob.core.windows.net/scripts/install-apache-tomcat.sh?sp=rl&st=2020-11-06T04:27:08Z&se=2020-12-07T04:27:00Z&sv=2019-12-12&sr=c&sig=mHjxrHQl%2F%2BUpZbE4sdMkCnnP%2BaGf8Fpla3MuoZqfgvw%3D",
			"type": "string",
			"metadata": {
				"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
			}
		},
		
		"_artifactsLocation2": {
			"defaultValue": "https://storageaccountscripts.blob.core.windows.net/scripts/install-azagent.sh?sp=rl&st=2020-11-06T04:27:08Z&se=2020-12-07T04:27:00Z&sv=2019-12-12&sr=c&sig=mHjxrHQl%2F%2BUpZbE4sdMkCnnP%2BaGf8Fpla3MuoZqfgvw%3D",
			"type": "string",
			"metadata": {
				"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
			}
		},

		"_artifactsLocation3": {
			"defaultValue": "https://storageaccountscripts.blob.core.windows.net/scripts/pre-install-AzureAgent-2.sh?sp=rl&st=2020-11-06T04:27:08Z&se=2020-12-07T04:27:00Z&sv=2019-12-12&sr=c&sig=mHjxrHQl%2F%2BUpZbE4sdMkCnnP%2BaGf8Fpla3MuoZqfgvw%3D",
			"type": "string",
			"metadata": {
				"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
			}
		},

		
	    "_artifactsLocation4": {
			"defaultValue": "https://storageaccountscripts.blob.core.windows.net/scripts/pre-install-AzureAgent.sh?sp=rl&st=2020-11-06T04:27:08Z&se=2020-12-07T04:27:00Z&sv=2019-12-12&sr=c&sig=mHjxrHQl%2F%2BUpZbE4sdMkCnnP%2BaGf8Fpla3MuoZqfgvw%3D",
			"type": "string",
			"metadata": {
				"description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
			}
		},
		"_artifactsLocationSasToken": {
			"defaultValue": "",
			"type": "securestring",
			"metadata": {
				"description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
			}
		},
		"commandToExecute": {
			"type": "string",
			"defaultValue": "sh pre-install-AzureAgent.sh",
			"metadata": {
				"description": "The command to execute."
			}
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Location for all resources."
			}
		},
		"authenticationType": {
			"type": "string",
			"defaultValue": "password",
			"allowedValues": [
				"sshPublicKey",
				"password"
			],
			"metadata": {
				"description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
			}
		},
		"adminPasswordOrKey": {
			"defaultValue": "123@azuredevops",
			"type": "securestring",
			"metadata": {
				"description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
			}
		},

    "networkSecurityGroupName": {
			"defaultValue": "customscriptNSG",
			"type": "string"
		}
	},
	"variables": {
		"scenarioPrefix": "customscriptLinux",
		"imagePublisher": "Canonical",
		"imageOffer": "UbuntuServer",
		"ubuntuOSVersion": "16.04-LTS",
		"nicName": "[concat(variables('scenarioPrefix'),'Nic')]",
		"vnetAddressPrefix": "10.0.0.0/16",
		"subnetName": "[concat(variables('scenarioPrefix'),'Subnet')]",
		"subnetPrefix": "10.0.0.0/24",
		"publicIPAddressName": "[concat(variables('scenarioPrefix'),'PublicIp')]",
		"publicIPAddressType": "Dynamic",
		"vmName": "[concat(variables('scenarioPrefix'),'VM')]",
		"virtualNetworkName": "[concat(variables('scenarioPrefix'),'Vnet')]",
		"subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
		"linuxConfiguration": {
			"disablePasswordAuthentication": true,
			"ssh": {
				"publicKeys": [{
					"path": "[concat('/home/', parameters('username'), '/.ssh/authorized_keys')]",
					"keyData": "[parameters('adminPasswordOrKey')]"
				}]
			}
		}
	},
	"resources": [{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName')]",
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[parameters('dnsNameForPublicIP')]"
				}
			}
		},

		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2020-06-01",
			"name": "[parameters('networkSecurityGroupName')]",
			"location": "[parameters('location')]",
			"properties": {
				"securityRules": [{
					"name": "default-allow-443",
					"properties": {
						"priority": 1000,
						"access": "Allow",
						"direction": "Inbound",
						"destinationPortRange": "443",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*"
					}
				},
				{
                        "name": "port_80",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },

					{
                        "name": "port_22",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1011,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },

					{
                        "name": "port_8080",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1012,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
				
				]
			}
		},



		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[variables('virtualNetworkName')]",
			"location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
      ],
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('vnetAddressPrefix')]"
					]
				},
				"subnets": [{
					"name": "[variables('subnetName')]",
					"properties": {
						"addressPrefix": "[variables('subnetPrefix')]",
                        "networkSecurityGroup": {
                           "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                        }
					}
				}]
			}
		},

		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[variables('nicName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
			],
			"properties": {
				"ipConfigurations": [{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
						},
						"subnet": {
							"id": "[variables('subnetRef')]"
						}
					}
				}]
			}
		},
		{
			"apiVersion": "2016-04-30-preview",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('vmName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computerName": "[variables('vmName')]",
					"adminUsername": "[parameters('username')]",
					"adminPassword": "[parameters('adminPasswordOrKey')]",
					"linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('imagePublisher')]",
						"offer": "[variables('imageOffer')]",
						"sku": "[variables('ubuntuOSVersion')]",
						"version": "latest"
					},
					"osDisk": {
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
					}]
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmName'),'/installcustomscript')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
			],
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": [
						"[parameters('_artifactsLocation1')]",
						"[parameters('_artifactsLocation2')]",
						"[parameters('_artifactsLocation3')]",
						"[parameters('_artifactsLocation4')]"
					],
					"commandToExecute": "[parameters('commandToExecute')]"
				}
			}
		}
	]
}